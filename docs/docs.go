// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Petr Mitin",
            "url": "https://github.com/Petr09Mitin",
            "email": "petr09mitin@mail.ru"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login/": {
            "post": {
                "description": "login user by email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "handle user's login",
                "operationId": "auth/login",
                "parameters": [
                    {
                        "description": "Email of the user",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Password of the user",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/domain.User"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "Set-Cookie": {
                                "type": "string",
                                "description": "session_id=some_session_id; Path=/; Max-Age=36000; HttpOnly;"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/auth/logout/": {
            "delete": {
                "description": "logout user that is authorized",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "handle user's logout",
                "operationId": "auth/logout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "Set-Cookie": {
                                "type": "string",
                                "description": "session_id=some_session_id; Path=/; HttpOnly; Expires=Thu, 01 Jan 1970 00:00:00 GMT;"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/auth/signup/": {
            "post": {
                "description": "registrate user by his data",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "handle user's registration flow",
                "operationId": "auth/signup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "First name of the user",
                        "name": "firstName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Last name of the user",
                        "name": "lastName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email of the user",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minLength": 6,
                        "type": "string",
                        "description": "Password of the user",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minLength": 6,
                        "type": "string",
                        "description": "Repeat password of the user",
                        "name": "repeatPassword",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "example": "2021-01-01",
                        "description": "Date of birth of the user",
                        "name": "dateOfBirth",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Avatar of the user",
                        "name": "avatar",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/domain.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/chat/": {
            "get": {
                "description": "Serve websocket connection. You can send actions to connection following simple structure:\n\n{\n\"type\": ActionType,\n\"receiver\": uint,\n\"csrfToken\": string,\n\"payload\": interface{}\n}\n\nActionType is a string with one of following values: \"SEND_MESSAGE\", \"UPDATE_MESSAGE\", \"DELETE_MESSAGE\", \"SEND_STICKER_MESSAGE\"\n\nIf \"type\" = \"SEND_MESSAGE\", then payload should be {\"content\": string}\nIf \"type\" = \"UPDATE_MESSAGE\", then payload should be {\"messageId\": uint, \"content\": string, attachmentsToDelete: []string}\nIf \"type\" = \"DELETE_MESSAGE\", then payload should be {\"messageId\": uint}\nIf \"type\" = \"SEND_STICKER_MESSAGE\", then payload should be {\"stickerId\": uint}\n\nIn response clients, subscribed to corresponding channel, will get same structure back:\n{\n\"type\": ActionType,\n\"receiver\": uint,\n\"csrfToken\": string,\n\"payload\": interface{}\n}\n\n\"payload\" can be:\nPersonalMessage if \"type\" = \"SEND_MESSAGE\"\nPersonalMessage if \"type\" = \"UPDATE_MESSAGE\"\nAbsent if \"type\" = \"DELETE_MESSAGE\"\nPersonalMessage if \"type\" = \"SEND_STICKER_MESSAGE\"\n{\"error\": string} if error happened at any point of query processing\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "serve websocket connection",
                "operationId": "chat/serve_ws",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/chat/dialogs/": {
            "get": {
                "description": "get user dialogs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "get user dialogs",
                "operationId": "chat/get_dialogs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.Dialog"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/chat/dialogs/{receiverID}/unsent-attachments/": {
            "get": {
                "description": "get unsent message attachments, returns array of filenames",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "get unsent message attachments",
                "operationId": "chat/get_unsent_message_attachments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the receiver",
                        "name": "receiverID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "create unsent message attachments",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "create unsent message attachments",
                "operationId": "chat/create_unsent_message_attachments",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Attachment file",
                        "name": "attachment",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the receiver",
                        "name": "receiverID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete unsent message attachments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "delete unsent message attachments",
                "operationId": "chat/delete_unsent_message_attachments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the receiver",
                        "name": "receiverID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/chat/dialogs/{receiverID}/unsent-attachments/{fileName}": {
            "delete": {
                "description": "delete unsent message attachment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "delete unsent message attachment",
                "operationId": "chat/delete_unsent_message_attachment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the receiver",
                        "name": "receiverID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the file",
                        "name": "fileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/chat/messages/": {
            "get": {
                "description": "get messages by dialog with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "get messages by dialog",
                "operationId": "chat/get_messages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the peer",
                        "name": "peerId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the last message, if last messages needed, should be set to 0",
                        "name": "lastMessageId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.PersonalMessage"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/chat/stickers/": {
            "get": {
                "description": "get all stickers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "get all stickers",
                "operationId": "chat/get_all_stickers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.Sticker"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "create sticker",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "create sticker",
                "operationId": "chat/create_sticker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the sticker",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image of the sticker",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/domain.Sticker"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/chat/stickers/{authorID}": {
            "get": {
                "description": "get stickers by author ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "get stickers by author ID",
                "operationId": "chat/get_stickers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the author",
                        "name": "authorID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.Sticker"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/chat/stickers/{stickerID}": {
            "delete": {
                "description": "delete sticker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "delete sticker",
                "operationId": "chat/delete_sticker",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the sticker",
                        "name": "stickerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/csrf/": {
            "get": {
                "description": "Get CSRF token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "csrf"
                ],
                "summary": "Get CSRF token",
                "operationId": "csrf/get_csrf_token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/rest.CSRFTokenResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/groups/": {
            "post": {
                "description": "create public group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "create public group",
                "operationId": "groups/create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the group",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description of the group",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Avatar of the group",
                        "name": "avatar",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/domain.PublicGroup"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/groups/by-sub/{userID}": {
            "get": {
                "description": "get public groups by subscriber ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "get public groups by subscriber ID",
                "operationId": "groups/by-sub",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.PublicGroup"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/groups/search": {
            "get": {
                "description": "search public groups by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "search public groups by name",
                "operationId": "groups/search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/publicgroup.PublicGroupWithInfo"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/groups/{groupID}": {
            "get": {
                "description": "get public group by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "get public group by ID",
                "operationId": "groups/get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/publicgroup.PublicGroupWithInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "update public group",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "update public group",
                "operationId": "groups/update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the group",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Description of the group",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Avatar of the group",
                        "name": "avatar",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/domain.PublicGroup"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete public group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "delete public group",
                "operationId": "groups/delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/json.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/groups/{groupID}/admins/": {
            "get": {
                "description": "get admins by public group ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "get admins by public group ID",
                "operationId": "groups/admins",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "create public group admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "create public group admin",
                "operationId": "groups/admin/create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User ID",
                        "name": "userId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/json.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete public group admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "delete public group admin",
                "operationId": "groups/admin/delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/json.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/groups/{groupID}/admins/check": {
            "get": {
                "description": "check if user is admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "check if user is admin",
                "operationId": "groups/admins/check",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/rest.CheckIfUserIsAdminRes"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/groups/{groupID}/is-sub": {
            "get": {
                "description": "get subscription by public group ID and subscriber ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "get subscription by public group ID and subscriber ID",
                "operationId": "groups/is-sub",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/domain.PublicGroupSubscription"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/groups/{groupID}/posts/": {
            "get": {
                "description": "get posts of public group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "get posts of public group",
                "operationId": "groups/posts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Last post ID",
                        "name": "lastPostId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Posts amount",
                        "name": "postsAmount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.Post"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "create post in public group",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "create post in public group",
                "operationId": "groups/posts/create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Content of the post",
                        "name": "content",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Attachments of the post",
                        "name": "attachments",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/domain.PostWithAuthorAndGroup"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/groups/{groupID}/sub": {
            "post": {
                "description": "subscribe to public group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "subscribe to public group",
                "operationId": "groups/sub",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/json.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/groups/{groupID}/unsub": {
            "post": {
                "description": "unsubscribe from public group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "unsubscribe from public group",
                "operationId": "groups/unsub",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/json.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/posts/": {
            "get": {
                "description": "get user posts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "get user posts",
                "operationId": "posts/get_user_posts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the user",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the last post, if 0 - get first posts",
                        "name": "lastPostId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of posts to get, if 0 - get 20 posts",
                        "name": "postsAmount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.ListUserPostsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "update post by id",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "update post",
                "operationId": "posts/update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the post",
                        "name": "postId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Content of the post",
                        "name": "content",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Attachments to delete",
                        "name": "attachmentsToDelete",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "Attachments of the post",
                        "name": "attachments",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "application/json\"\t\"Attachments is always null!!!",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "$ref": "#/definitions/domain.Post"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "create post with attachments",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "create post",
                "operationId": "posts/create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Content of the post",
                        "name": "content",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Attachments of the post",
                        "name": "attachments",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/domain.PostWithAuthor"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete post by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "delete post",
                "operationId": "posts/delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "ID of the post",
                        "name": "post_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/json.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/posts/all": {
            "get": {
                "description": "get posts by group subscriptions and user subscriptions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "get posts by group subscriptions and user subscriptions",
                "operationId": "posts/get_posts_by_group_subscriptions_and_user_subscriptions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the last post, if 0 - get first posts",
                        "name": "lastPostId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of posts to get, if 0 - get 20 posts",
                        "name": "postsAmount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.PostWithAuthorAndGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/posts/comment": {
            "put": {
                "description": "update comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "update comment",
                "operationId": "posts/update_comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "ID of the comment",
                        "name": "commentID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Content of the comment",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.CommentWithAuthor"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "create comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "create comment",
                "operationId": "posts/create_comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Content of the comment",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID of the post",
                        "name": "postID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.CommentWithAuthor"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "delete comment",
                "operationId": "posts/delete_comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "ID of the comment",
                        "name": "commentID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/json.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/posts/comments/like": {
            "post": {
                "description": "like comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "like comment",
                "operationId": "posts/like_comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "ID of the comment",
                        "name": "commentID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.CommentLike"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/posts/comments/unlike": {
            "delete": {
                "description": "unlike comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "unlike comment",
                "operationId": "posts/unlike_comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "ID of the comment",
                        "name": "commentID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/json.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/posts/friends": {
            "get": {
                "description": "get user friends posts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "get user friends posts",
                "operationId": "posts/get_user_friends_posts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the last post",
                        "name": "lastPostId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of posts to get, if 0 - get 20 posts",
                        "name": "postsAmount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.PostWithAuthor"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/posts/groups": {
            "get": {
                "description": "get group posts by subscriptions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "get group posts by subscriptions",
                "operationId": "posts/get_group_posts_by_subscriptions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the last post, if 0 - get first posts",
                        "name": "lastPostId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of posts to get, if 0 - get 20 posts",
                        "name": "postsAmount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.PostWithAuthorAndGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/posts/like": {
            "post": {
                "description": "like post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "like post",
                "operationId": "posts/like",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "ID of the post",
                        "name": "postId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.PostLike"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/posts/liked": {
            "get": {
                "description": "get posts that are authored by authorized user and liked by some people,\nfor every like it returns post and user that liked that post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "get liked posts",
                "operationId": "posts/get_liked_posts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the last like, if 0 - get first likes",
                        "name": "lastLikeId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of liked posts to get, if 0 - get 20 liked posts",
                        "name": "postsAmount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/posts.LikeWithPostAndUser"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/posts/new": {
            "get": {
                "description": "get new posts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "get new posts",
                "operationId": "posts/get_new_posts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the last post, if 0 - get first posts",
                        "name": "lastPostId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of posts to get, if 0 - get 20 posts",
                        "name": "postsAmount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.PostWithAuthorAndGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/posts/unlike": {
            "delete": {
                "description": "unlike post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "unlike post",
                "operationId": "posts/unlike",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "ID of the post",
                        "name": "postId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/json.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/posts/{id}": {
            "get": {
                "description": "get post by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "get post by id",
                "operationId": "posts/get_post_by_id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the post",
                        "name": "postId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/domain.PostWithAuthorAndGroup"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/posts/{postID}/comments": {
            "get": {
                "description": "get comments by post id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "get comments by post id",
                "operationId": "posts/get_comments_by_post_id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the post",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.CommentWithAuthor"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/profile/": {
            "put": {
                "description": "update user profile",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "update user profile",
                "operationId": "profile/update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "First name",
                        "name": "firstName",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Last name",
                        "name": "lastName",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Repeat password",
                        "name": "repeatPassword",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Date of birth",
                        "name": "dateOfBirth",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Avatar",
                        "name": "avatar",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/domain.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete user profile",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "delete user profile",
                "operationId": "profile/delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/profile/search": {
            "get": {
                "description": "search users by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "search users by name",
                "operationId": "profile/search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/profile/{userID}": {
            "get": {
                "description": "get user profile with subscriptions info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "get user profile with subscriptions info",
                "operationId": "profile/get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID, if empty - get authorized user profile",
                        "name": "userID",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/user.UserWithSubsInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/subscriptions/": {
            "post": {
                "description": "subscribe to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "handle user's subscription flow",
                "operationId": "subscriptions/subscribe",
                "parameters": [
                    {
                        "description": "Subscribed to ID",
                        "name": "subscribedTo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/domain.Subscription"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "unsubscribe from user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "handle user's unsubscription flow",
                "operationId": "subscriptions/unsubscribe",
                "parameters": [
                    {
                        "description": "User to unsubscribe from",
                        "name": "subscribedTo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/subscriptions/friends/": {
            "get": {
                "description": "get user's friends",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "get user's friends",
                "operationId": "subscriptions/friends",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/subscriptions.GetFriendsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/subscriptions/subscribers/": {
            "get": {
                "description": "get user's subscribers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "get user's subscribers",
                "operationId": "subscriptions/subscribers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/subscriptions.GetSubscribersResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/subscriptions/subscriptions/": {
            "get": {
                "description": "get user's subscriptions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "get user's subscriptions",
                "operationId": "subscriptions/subscriptions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session_id=some_session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSRF token",
                        "name": "X-CSRF-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/json.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/subscriptions.GetSubscriptionsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Comment": {
            "type": "object",
            "properties": {
                "authorId": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "id": {
                    "type": "integer"
                },
                "likedBy": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "postId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "domain.CommentLike": {
            "type": "object",
            "properties": {
                "commentId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "id": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "domain.CommentWithAuthor": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/domain.User"
                },
                "comment": {
                    "$ref": "#/definitions/domain.Comment"
                }
            }
        },
        "domain.Dialog": {
            "type": "object",
            "properties": {
                "lastMessage": {
                    "$ref": "#/definitions/domain.PersonalMessage"
                },
                "user1": {
                    "$ref": "#/definitions/domain.User"
                },
                "user2": {
                    "$ref": "#/definitions/domain.User"
                }
            }
        },
        "domain.PersonalMessage": {
            "type": "object",
            "properties": {
                "attachments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "id": {
                    "type": "integer"
                },
                "receiverId": {
                    "type": "integer"
                },
                "senderId": {
                    "type": "integer"
                },
                "sticker": {
                    "$ref": "#/definitions/domain.Sticker"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "domain.Post": {
            "type": "object",
            "properties": {
                "attachments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authorId": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "groupId": {
                    "type": "integer"
                },
                "likedBy": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "postId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "domain.PostLike": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "likeId": {
                    "type": "integer"
                },
                "postId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "domain.PostWithAuthor": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/domain.User"
                },
                "post": {
                    "$ref": "#/definitions/domain.Post"
                }
            }
        },
        "domain.PostWithAuthorAndGroup": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/domain.User"
                },
                "group": {
                    "$ref": "#/definitions/domain.PublicGroup"
                },
                "post": {
                    "$ref": "#/definitions/domain.Post"
                }
            }
        },
        "domain.PublicGroup": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "subscribersCount": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "domain.PublicGroupSubscription": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "id": {
                    "type": "integer"
                },
                "publicGroupId": {
                    "type": "integer"
                },
                "subscriberId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "domain.Sticker": {
            "type": "object",
            "properties": {
                "authorId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "fileName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "domain.Subscription": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "subscribedTo": {
                    "type": "integer"
                },
                "subscriber": {
                    "type": "integer"
                },
                "subscriptionId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string",
                    "example": "default_avatar.png"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "dateOfBirth": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "errors.HTTPError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "json.JSONResponse": {
            "type": "object",
            "properties": {
                "body": {}
            }
        },
        "posts.LikeWithPostAndUser": {
            "type": "object",
            "properties": {
                "like": {
                    "$ref": "#/definitions/domain.PostLike"
                },
                "likedBy": {
                    "$ref": "#/definitions/domain.User"
                },
                "post": {
                    "$ref": "#/definitions/domain.Post"
                }
            }
        },
        "publicgroup.PublicGroupWithInfo": {
            "type": "object",
            "properties": {
                "isSubscribed": {
                    "type": "boolean"
                },
                "publicGroup": {
                    "$ref": "#/definitions/domain.PublicGroup"
                }
            }
        },
        "rest.CSRFTokenResponse": {
            "type": "object",
            "properties": {
                "csrfToken": {
                    "type": "string"
                }
            }
        },
        "rest.CheckIfUserIsAdminRes": {
            "type": "object",
            "properties": {
                "isAdmin": {
                    "type": "boolean"
                }
            }
        },
        "rest.ListUserPostsResponse": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/domain.User"
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Post"
                    }
                }
            }
        },
        "subscriptions.GetFriendsResponse": {
            "type": "object",
            "properties": {
                "friends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.User"
                    }
                }
            }
        },
        "subscriptions.GetSubscribersResponse": {
            "type": "object",
            "properties": {
                "subscribers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.User"
                    }
                }
            }
        },
        "subscriptions.GetSubscriptionsResponse": {
            "type": "object",
            "properties": {
                "subscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.User"
                    }
                }
            }
        },
        "user.UserWithSubsInfo": {
            "type": "object",
            "properties": {
                "isSubscribedTo": {
                    "type": "boolean"
                },
                "isSubscriber": {
                    "type": "boolean"
                },
                "user": {
                    "$ref": "#/definitions/domain.User"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Socio API",
	Description:      "First version of Socio API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
