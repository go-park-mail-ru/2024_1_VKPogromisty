version: '3.9'
services:
  postgresdb:
    image: postgres:16.2
    container_name: postgres_container
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DBNAME}
    ports:
      - 5431:5432
    volumes:
      - pg_data:/var/lib/postgresql/data/

  redis:
    image: redis:7.2.4
    command: redis-server --requirepass ${REDIS_PASSWORD}
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis_data:/root/redis/
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
      - REDIS_DATABASES=16

  minio:
    image: minio/minio:RELEASE.2024-04-18T19-09-19Z
    volumes:
      - ./static/:/data/
    ports:
      - 9000:9000
    command: server /data
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}

  user_service:
    image: socio/user-service:latest
    container_name: user_service_container
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DBNAME=${PG_DBNAME}
      - PG_HOST=postgresdb
      - PG_PORT=${PG_PORT}
    tty: true
    ports:
      - 8082:8082
    restart: on-failure
    volumes:
      - ./volumes/logs/:/var/log/socio/
    depends_on:
      - postgresdb
      - redis
      - minio
  
  post_service:
    image: socio/post-service:latest
    container_name: post_service_container
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DBNAME=${PG_DBNAME}
      - PG_HOST=postgresdb
      - PG_PORT=${PG_PORT}
    tty: true
    ports:
      - 8083:8083
    restart: on-failure
    volumes:
      - ./volumes/logs/:/var/log/socio/
    depends_on:
      - postgresdb
      - redis
      - minio
      - user_service
  
  public_group_service:
    image: socio/public-group-service:latest
    container_name: public_group_service_container
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DBNAME=${PG_DBNAME}
      - PG_HOST=postgresdb
      - PG_PORT=${PG_PORT}
    tty: true
    ports:
      - 8085:8085
    restart: on-failure
    volumes:
      - ./volumes/logs/:/var/log/socio/
    depends_on:
      - postgresdb
      - redis
      - minio
    
  auth_service:
    image: socio/auth-service:latest
    container_name: auth_service_container
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DBNAME=${PG_DBNAME}
      - PG_HOST=postgresdb
      - PG_PORT=${PG_PORT}
    tty: true
    ports:
      - 8084:8084
    restart: on-failure
    volumes:
      - ./volumes/logs/:/var/log/socio/
    depends_on:
      - postgresdb
      - redis
      - user_service

  app:
    image: socio/app-service:latest
    container_name: golang_container
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DBNAME=${PG_DBNAME}
      - PG_HOST=postgresdb
      - PG_PORT=${PG_PORT}
    tty: true
    ports:
      - 8001:8001
      - 8080:8080
    restart: on-failure
    volumes:
      - .:/app
      - ./static/:/static/
      - ./volumes/logs/:/var/log/socio/
    depends_on:
      - postgresdb
      - redis
      - user_service
      - post_service
      - auth_service
  
  nginx:
    image: nginx:1.25.4
    restart: always
    volumes:
      - ./volumes/nginx/:/etc/nginx/
      - ./static/:/static/
      - ./volumes/certbot/www/:/var/www/certbot/:ro
      - ./volumes/certbot/conf/:/etc/letsencrypt/:ro
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
    
  # certbot:
  #   image: certbot/certbot:v2.9.0
  #   command: certonly --standalone --non-interactive --agree-tos --email petr09mitin@mail.ru --domains socio-project.ru   
  #   volumes:
  #     - ./volumes/certbot/www/:/var/www/certbot/:rw
  #     - ./volumes/certbot/conf/:/etc/letsencrypt/:rw
  #   environment:
  #     - LETSENCRYPT_EMAIL=petr09mitin@mail.ru
  #     - LETSENCRYPT_DOMAIN=socio-project.ru
  #   depends_on:
  #     - nginx

volumes:
  pg_data:
  redis_data:
